@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Products";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<main class="content">
	<div class="container-fluid p-0">
        <h1 class="h3 mb-3">Products</h1>
		<div class="row">
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<span class="float-end">
                            <a asp-area="Admin" asp-controller="Product" asp-action="Create" class="btn btn-primary btn-md text-white">Create</a>
                        </span>
					</div>
					<div class="card-body">
                        <table id="datatables-basic" class="table table-striped table-bordered" style="width:100%">
							<thead>
								<tr>
                                    <th>Id</th>
                                    <th>Product Type Name</th>
                                    <th>Name</th>
                                    <th>Price</th>
                                    <th>Description</th>
                                    <th data-orderable="false">Operations</th>
								</tr>
							</thead>
						</table>
					</div>
				</div>
			</div>
		</div>
         
        <script>
            document.addEventListener("DOMContentLoaded", function(event) {
                $("#datatables-basic").DataTable({                    
                    "responsive": true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": "/Admin/Product/GetProducts",
                        "type": "POST",
                        "datatype": "json",
                        'beforeSend': function (request) {
                            request.setRequestHeader("RequestVerificationToken",
                                document.getElementById("RequestVerificationToken").value);
                        }
                    },
                    "columnDefs": [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false,
                    }],
                    "order": [[0, "desc"]],
                    "columns": [
                        { "data": "idProduct", "name": "IdProduct", "autoWidth": true },
                        { "data": "productTypeName", "name": "ProductTypeName", "autoWidth": true },
                        { "data": "name", "name": "Name", "autoWidth": true },
                        { "data": "price", "name": "Price", "autoWidth": true },
                        { "data": "description", "name": "Description", "autoWidth": true },
                        {
                             "render": function (data, type, row) {
                                return `<a href='product/detail/${row.idProduct}'>
                                            <i class='align-middle mr-2 far fa-fw fa-list-alt'></i>
                                        </a>
                                        <a href = 'product/update/${row.idProduct}'>
                                            <i class='align-middle mr-2 far fa-fw fa-edit'></i>
                                        </a>
                                        <a href = 'product/delete/${row.idProduct}'>
                                            <i class='align-middle mr-2 far fa-fw fa-trash-alt'></i>
                                        </a>
                                        <a href = '/product/detail/${row.productTypeId}'>
                                            <i class='align-middle mr-2 fas fa-fw fa-arrow-right'></i>
                                        </a>`
                            }
                        },
                    ]
                });
            });
        </script>
	</div>
</main>